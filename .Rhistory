install.packages("sqldf")
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlcode <- readLines(con)
htmlcode
nchar(htmlcode)
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
sum(x$V4)
head(x)
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=0,
widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
head(x)
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
sum(x$V4)
x <- read.fwf(
file="C:\\Users\\Rex\\Desktop\\getdata_wksst8110.for",
skip=4,
widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
sum(x$V4)
install.packages("lattice")
install.packages("grid")
install.packages("ggplot2")
install.packages("ggplot")
library(ggplot2)
mpg
str(mpg)
qplot(displ, hwy, data = mpg)
factor(mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x <- ls()
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10, replace = FALSE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100,replace = FALSE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100,replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
rbinom(100, size = 1, prob = 0.7)
flips <- rbinom(100, size = 1, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
data(cars)
help(cars)
head(cars)
plot(cars)
?plot
x
plot()
plot(cars)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$dist, y = cars$speed, xlab = "Sppeed")
plot(x = cars$dist, y = cars$speed, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance", xlab = "Speed")
x
cars
plot(cars, main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, col = 2)
plot(cars, pch = 2)
load(mtcars)
data(mtcars)
?boxplot
data(mtcars)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
library(swirl)
swirl()
swirl()
Sys.getlocale("LC_TIME")
Sys.setenv(LANG = "en")
Sys.getlocale("LC_TIME")
Sys.setlocale("LC_ALL","English")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("19200102")
ymd("1920/1/2")
dt1
ymd_hms
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
nyc <- now("America/New_York")
nyc
depart(nyc + days(2))
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- update(depart, hours =15, minutes = 30)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy( "June 17, 2008",tz = "Singapore")
last_time
interval(arrive, last_time)
?interval
how_long <- interval(arrive, last_time)
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(jsonlite)
data <- fromJSON("C:\\迅雷下载\\lines-bus.json")
View(data)
install.packages("field")
install.packages("fields")
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5,col ="blue")
abline(h = .4,col ="red")
5
12
abline(h = .05,col ="green")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25) )
heatmap(mt)
mt
denmt
plot(denmt)
distmt
cmat
points(cx,cy,col = c( "red", "orange", "purple"), pch =3 ,cex = 2, lwd = 2)
points(cx,cy,col = c( "red", "orange", "purple"), pch =3 ,cex = 2, lwd = 2)
mdist(x,y,cx,cy)
apply(distTmp, 2, min)
apply(distTmp, 2, which.min)
apply(distTmp, 2, which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmeans(dataFrame,centers=3)
kmObj$iter
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
kmeans(dataFrame,6)$cluster
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
svd(mat)
matu %*% diag %*% t(matv)
svd(mat)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2 <- svd(constantMatrix)
svd2$d
svd2$v[,2]
svd2$v[,1:2]
svd2$v[,1:2]
svd2$d
dim(faceData)
dim(faceData)
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
myImage(a1)
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[562:563])
ssd$subject
table(ssd$subject)
sum( table(ssd$subject)))
sum(table(ssd$subject)))
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd,subject == 1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.r")
myedit("showXY.R")
showMe(1:6)
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclust(mdist)
hclustering <- hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12,maxCon)])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
names(sub1[maxCon])
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
dim(kClust$centers)
laying <- which(kClust$size==29)
laying <- which(kClust$size==29)
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
names(sub1[,1:3])
e walkdown <- which(kClust$size==49)
walkdown <- which(kClust$size==49)
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
setwd("C:\\Users\\Rex\\code\\RepData_PeerAssessment1")
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
library(dplyr)
library(lubridate)
library(ggplot2)
activity_g <- group_by(activity, date)
a <- summarize(activity_g, sum(step))
a$date <- ymd(a$date)
p <- ggplot(data=a, aes(x=date,y=step))
p <- p + geom_bar( stat="identity" , width = 0.4, fill = "cornflowerblue")
p
a <- summarize(activity_g, sum(step))
head(activity_g)
a <- summarize(activity_g, sum(step, na.rm = TRUE))
a <- summarise(activity_g, sum(step, na.rm = TRUE))
library(dplyr)
library(lubridate)
a <- summarise(activity_g, sum(step, na.rm = TRUE))
?summarise
?summarize
str(activity)
a <- summarise(activity_g, sum(steps, na.rm = TRUE))
a$date <- ymd(a$date)
p <- ggplot(data=a, aes(x=date,y=step))
p <- p + geom_bar( stat="identity" , width = 0.4, fill = "cornflowerblue")
p
a
names(a)[2] <- "date"
a$date <- ymd(a$date)
p <- ggplot(data=a, aes(x=date,y=step))
p <- p + geom_bar( stat="identity" , width = 0.4, fill = "cornflowerblue")
p
str(a)
names(a)[2] <- "step"
p <- ggplot(data=a, aes(x=date,y=step))
p <- p + geom_bar( stat="identity" , width = 0.4, fill = "cornflowerblue")
p
?qplot
?knitr
str(activity)
activity_g <- group_by(activity, interval)
activity_avg <- summarize(activity_g, average(steps, na.rm = TRUE))
names(activity_sum)[2] <- "step"
plot(activity_avg$interval, avtivity_avg$step)
activity_g <- group_by(activity, interval)
activity_avg <- summarize(activity_g, mean(steps, na.rm = TRUE))
names(activity_sum)[2] <- "step"
plot(activity_avg$interval, avtivity_avg$step)
names(activity_avg)[2] <- "step"
plot(activity_avg$interval, avtivity_avg$step)
plot(activity_avg$interval, avtivity_avg$step)
plot(activity_avg$interval, activity_avg$step)
?plot
plot(activity_avg$interval, activity_avg$step, type = "l")
plot(data = activity_avg, interval, step, type = "l")
?par
?which.max
summary(is.na(activity$steps))
table(is.na(activity$steps))
clasS(table(is.na(activity$steps)))
table(is.na(activity$steps))[1]
?class
class(table(is.na(activity$steps))[1])
head(activity_avg)
avtivity_fill <- activity[!is.na(activity$steps),]
activity_tofix <- activity[!is.na(activity$steps),1:2]
a<-merge(activity_tofix,activity_avg)
a <- unique(a)
activity_tofix <- activity[is.na(activity$steps),1:2]
head(activity_tofix)
activity_tofix <- activity[is.na(activity$steps),2:3]
a<-merge(activity_tofix,activity_avg)
unique(a)
a<-merge(activity_avg,activity_tofix)
head(a)
b <- data.frame(step = a$step, interval= a$interval, date = a$date)
head(b)
head(activity)
activity_fill <- rbind(avtivity_fill, b)
head(activity_fill)
avtivity_fill <- activity[!is.na(activity$steps),]
activity_fill <- rbind(avtivity_fill, b)
activity_fill
View(avtivity_fill)
activity_tofix <- data.frame(step = a$step, date = a$date, interval= a$interval)
activity_fill <- rbind(avtivity_fill, activity_tofix)
avtivity_fill <- activity[!is.na(activity$steps),]
activity_fill
a <- activity[!is.na(activity$steps),]
a
activity_fill
a <- activity[!is.na(activity$steps),]
activity_fill <- rbind(a, activity_tofix)
head(a)
head(activity_tofix)
activity_tofix <- data.frame(steps = a$step, date = a$date, interval= a$interval)
activity_fill <- rbind(a, activity_tofix)
activity_tofix <- activity[is.na(activity$steps),1:2]
a<-merge(activity_avg,activity_tofix)
a <- unique(a)
activity_tofix <- data.frame(steps = a$step, date = a$date, interval= a$interval)
avtivity_fill <- activity[!is.na(activity$steps),]
activity_fill <- rbind(activity_fill, activity_tofix)
dim(activity_fill)
dim(activity_tofix)
activity_fill <- unique(activity_fill)
dim(activity_fill)
weekdays(activity$date[1])
class(activity$date[1])
activity$date <- ymd(activity$date)
weekdays(activity$date[1])
activity[4] <- weekdays(activity$date)
head(activity)
activity["weekday"] <- weekdays(activity$date)
head(activity)
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
activity$date <- ymd(activity$date)
activity["weekday"] <- weekdays(activity$date)
head(activity)
?weekdays
weekdays(activity$date[1], abbreviate = TRUE)
weekdays(activity$date[1], abbreviate = TRUE) < "TUE"
weekdays(activity$date[1], abbreviate = TRUE) < "SUN"
CLASS(weekdays(activity$date[1], abbreviate = TRUE))
class(weekdays(activity$date[1], abbreviate = TRUE))
weekdays(activity$date[2], abbreviate = TRUE)
weekdays(activity$date[2000], abbreviate = TRUE)
weekdays(activity$date[1500], abbreviate = TRUE)
weekdays(activity$date[1100], abbreviate = TRUE)
identify <- function(day){
if(day == "Mon" | day =="Tue" | day =="Wed" |day =="Thu" |day =="Fri" ){return("weekday")}
return(weekend)
}
activity["weekday"] <- sapply(weekdays(activity$date),identify)
identify <- function(day){
if(day == "Mon" | day =="Tue" | day =="Wed" |day =="Thu" |day =="Fri" ){return("weekday")}
return("weekend")
}
activity["weekday"] <- sapply(weekdays(activity$date),identify)
head(activity)
activity["weekday"] <- sapply(weekdays(activity$date, abbreviate = TRUE),identify)
head(activity)
?as.factor
activity$weekday <- as.factor(activity$weekday)
?qplot
?group_by
activity_gr <- group_by(activity, interval, weekday)
activity_avg <- summarize(activity_gr, mean(steps, na.rm = TRUE))
luck <- summarize(activity_gr, mean(steps, na.rm = TRUE))
head(luck)
?qplot
luck <- summarize(activity_gr, step = mean(steps, na.rm = TRUE))
head(luck)
qplot(interval,step,data = luck, facets = weekday~.)
qplot(interval,step,data = luck, facets = weekday~.,geom = c("smooth"))
qplot(interval,step,data = luck, facets = weekday~.,geom = c("point"))
qplot(interval,step,data = luck, facets = weekday~.,geom = c("line"))
identify <- function(day){
if(day == "Mon" | day =="Tue" | day =="Wed" |day =="Thu" |day =="Fri" ){return("weekday")}
return("weekend")
}
activity["weekday"] <- sapply(weekdays(activity$date, abbreviate = TRUE),identify)
activity$weekday <- as.factor(activity$weekday)
head(activity)
?xyplot
library(lattice)
?xyplot
xyplot(interval ~ step | weekday,data = activity_week, type = "l")
xyplot(interval ~ step | weekday,data = luck, type = "l")
xyplot(step ~ interval | weekday,data = luck, type = "l")
identify <- function(day){
if(day == "Mon" | day =="Tue" | day =="Wed" |day =="Thu" |day =="Fri" ){return("weekday")}
return("weekend")
}
activity["weekday"] <- sapply(weekdays(activity$date, abbreviate = TRUE),identify)
activity$weekday <- as.factor(activity$weekday)
activity_gr <- group_by(activity, interval, weekday)
activity_week <- summarize(activity_gr, mean(steps, na.rm = TRUE))
xyplot(step ~ interval | weekday,data = activity_week, type = "l")
xyplot(step ~ interval | weekday,data = activity_week, type = "l")
head(activity_week)
head(luck)
?xyplot
